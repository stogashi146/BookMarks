- visitor = notification.visitor
- visited = notification.visited

.col-md-8.mx-auto.bg-white.mt-3
  .form-inline.py-2
    - case notification.action

    - when "follow" then
      .d-flex.flex-row.py-2
        .flex-column
          .d-flex.flex-row.mb-1
            = link_to user_path(visitor) do
              = attachment_image_tag visitor, :image, size: "50x50", fallback: "noimage.jpg", class: "rounded-circle"
            .flex-column.ml-3
              = link_to visitor.name, user_path(visitor), class:"text-dark"
              .small.text-muted
                = time_ago_in_words(notification.created_at).upcase
          span
            = link_to visitor.name, user_path(visitor), class:"text-info"
            | さんがあなたをフォローしました


    - when "favorite" then
      .d-flex.flex-row.py-2
        .flex-column.mb-5
          .d-flex.flex-row.mb-1
            = link_to user_path(visitor) do
              = attachment_image_tag visitor, :image, size: "50x50", fallback: "noimage.jpg", class: "rounded-circle"
            .flex-column.ml-3
              = link_to visitor.name, user_path(visitor), class:"text-dark"
              .small.text-muted
                = time_ago_in_words(notification.created_at).upcase
          span
            strong = link_to visitor.name, user_path(visitor), class:"text-dark"
            span さんが
            = link_to "#{notification.book.title}の投稿", book_book_read_path(notification.book_read.book_id,notification.book_read.id, user: visited), class:"text-info"
            | にいいねしました
      = link_to book_path(notification.book.id), class:"ml-auto text-right", style:"width: 150px;" do
        = image_tag(notification.book.image_url.chomp("?_ex=200x200"), :width => '60%')

    - when "comment" then
      .d-flex.flex-row.py-2
        .flex-column
          .d-flex.flex-row.mb-1
            = link_to user_path(visitor) do
              = attachment_image_tag visitor, :image, size: "50x50", fallback: "noimage.jpg", class: "rounded-circle"
            .flex-column.ml-3
              = link_to visitor.name, user_path(visitor), class:"text-dark"
              .small.text-muted
                = time_ago_in_words(notification.created_at).upcase
          span
            strong = link_to visitor.name, user_path(visitor), class:"text-dark"
            span さんが
            = link_to "#{notification.book.title}の投稿", book_book_read_path(notification.book_read.book_id,notification.book_read.id, user: visited), class:"text-info"
            | にコメントしました

          p = notification.read_comment.comment.truncate(50)
            - if notification.read_comment.comment.size > 50
              small
                = link_to "続きを読む", book_book_read_path(notification.book_id, notification.book_read_id, user: notification.visitor)

      = link_to book_path(notification.book.id), class:"ml-auto text-right", style:"width: 150px;" do
        = image_tag(notification.book.image_url.chomp("?_ex=200x200"), :width => '60%')


    - when "release" then
      .d-flex.flex-row
        .flex-column.pb-5
          .d-flex.flex-row.mb-1
            = link_to user_path(visitor) do
              = attachment_image_tag visitor, :image, size: "50x50", fallback: "noimage.jpg", class: "rounded-circle"
            .flex-column.ml-3
              = link_to visitor.name, user_path(visitor), class:"text-dark"
              .small.text-muted
                = time_ago_in_words(notification.created_at).upcase
          span
            span 読みたいリストの
            = link_to notification.book.title, book_path(notification.book), class:"text-info"
            | が、本日発売です

      = link_to book_path(notification.book.id), class:"ml-auto text-right", style:"width: 150px;" do
        = image_tag(notification.book.image_url.chomp("?_ex=200x200"), :width => '60%')
